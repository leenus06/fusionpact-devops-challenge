name: CI/CD Pipeline - Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Security Check
      run: |
        echo "🔒 Checking for exposed credentials..."
        if grep -r "AKIA" . --include="*.yml" --include="*.yaml" --include="*.py"; then
          echo "❌ SECURITY ISSUE: AWS keys found in code"
          exit 1
        else
          echo "✅ No exposed AWS credentials found"
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: security-scan
    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
    
    - name: Deploy to EC2
      run: |
        echo "🚀 Starting deployment to EC2..."
        ssh -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST "
          cd fusionpact-devops-challenge
          echo '1. Stopping existing services...'
          sudo docker-compose down
          echo '2. Pulling latest code...'
          git pull origin main
          echo '3. Rebuilding and starting services...'
          sudo docker-compose up -d --build
          echo '4. Waiting for services to start...'
          sleep 30
          echo '5. Testing all endpoints...'
          curl -f http://localhost/api/data && echo '✅ Backend API test passed'
          curl -f http://localhost:8000/metrics && echo '✅ Metrics test passed' 
          curl -f http://localhost:80 && echo '✅ Frontend test passed'
          echo '🎉 Deployment completed successfully!'
        "
        echo "✅ Deployment finished!"

  health-check:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Verify Deployment
      run: |
        echo "🏥 Verifying deployment health..."
        EC2_HOST='13.235.61.229'
        
        echo "1. Testing Frontend: http://$EC2_HOST"
        if curl -s -f "http://$EC2_HOST" > /dev/null; then
          echo "✅ Frontend is accessible"
        else
          echo "❌ Frontend check failed"
          exit 1
        fi
        
        echo "2. Testing Backend API: http://$EC2_HOST/api/data"
        if curl -s -f "http://$EC2_HOST/api/data" > /dev/null; then
          echo "✅ Backend API is working"
        else
          echo "❌ Backend API check failed"
          exit 1
        fi
        
        echo "3. Testing Metrics: http://$EC2_HOST/api/metrics"
        if curl -s -f "http://$EC2_HOST/api/metrics" > /dev/null; then
          echo "✅ Metrics endpoint is working"
        else
          echo "❌ Metrics check failed"
          exit 1
        fi
        
        echo "🎉 All services are healthy and running!"
